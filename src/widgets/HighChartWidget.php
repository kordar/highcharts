<?php

namespace kordar\highcharts\widgets;

use kordar\highcharts\items\HighChart;
use yii\data\ActiveDataProvider;
use yii\helpers\ArrayHelper;

/**
 * Class HighChartWidget
 * @package kordar\highcharts\widgets
 * @item *:HighChartWidget
 */
class HighChartWidget extends \yii\base\Widget
{
    /**
     * @var ActiveDataProvider
     */
    public $dataProvider = null;

    /**
     * @var array
     */
    protected $highChartData = [];

    /**
     * @var
     */
    public $title = '';

    /**
     * @var
     */
    public $subTitle = 'betweenCategories';

    /**
     * @var string | null
     */
    public $yAxisTitle = null;

    /**
     * @var array
     */
    public $legend = [];

    /**
     * @var array
     */
    protected $legendDefault = [
        'layout' => 'vertical',
        'align' => 'right',
        'verticalAlign' => 'middle'
    ];

    /**
     * @var int
     */
    public $maxSize = 36;

    /**
     * @var string
     */
    public $sort = [];

    /**
     * @var array
     */
    public $series = [];

    /**
     * @var string
     */
    public $categoryKey = null;

    /**
     * @var array
     */
    protected $categories = [];

    /**
     * @var array
     */
    protected $data = [];

    /**
     * @var string
     */
    public $chartType = 'line-basic';

    protected $typeMap = [
        'line-basic' => 'kordar\highcharts\items\HighChartLineBasic',
        'column' => 'kordar\highcharts\items\HighChartColumn',
        'pie' => 'kordar\highcharts\items\HighChartPie',
    ];

    public function beforeRun()
    {
        $this->dataProvider->setPagination(['pageSize' => $this->maxSize]);
        $this->dataProvider->setSort($this->sort);

        $this->initData();

        return parent::beforeRun(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        $class = ArrayHelper::getValue($this->typeMap, $this->chartType, 'kordar\highcharts\items\HighChartLineBasic');

        /**
         * @var  HighChart $object
         */
        $object = \Yii::createObject([
            'class' => $class, 'data' => $this->data, 'categories' => $this->categories
        ]);

        $object->generateTitle($this->title, $this->subTitle);
        $object->generateLegend($this->legendDefault, $this->legend);
        $object->generateAxis($this->yAxisTitle);
        $object->generateSeries($this->series);

        $assetClass = $object->assetsClass();
        call_user_func_array([$assetClass, 'register'], [$this->view]);

        $id = 'hchart-' . $this->id;
        echo '<div id="' . $id . '"></div>';
        $json = json_encode($object->highChartData);

        $options = [
            'lang' => [
                'contextButtonTitle' => '导出',
                'printChart' => '打印图表',
                'downloadJPEG' => '下载-图片(jpeg)',
                'downloadPDF' => '下载-pdf文档',
                'downloadPNG' => '下载-图片(png)',
                'downloadSVG' => '下载-SVG文档',
                'downloadXLS' => '导出-EXCEL文档',
                'downloadCSV' => '导出-CSV文档',
            ]
        ];

        $this->view->registerJs('Highcharts.setOptions(' . json_encode($options) . ');');

        $this->view->registerJs('Highcharts.chart(\'' . $id . '\',' . $json . ');');
    }

    protected function initCategories($model)
    {
        if (is_string($this->categoryKey)) {
            $_key = $this->categoryKey;
            $this->categories[] = isset($model->$_key) ? $model->$_key : '';
        }

        if ($this->categoryKey instanceof \Closure) {
            $this->categories[] = call_user_func($this->categoryKey, $model);
        }
    }

    public function initData()
    {
        $models = $this->dataProvider->getModels();
        foreach ($models as $model) {
            $this->initCategories($model);
            foreach ($this->series as $column) {
                $key = $column['attribute'];
                $this->data[$key][] = call_user_func($column['value'], $model->$key, $model);
            }
        }
    }

}